<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.codeflux.appUser.mapper.AppUserMapper">
    
    <resultMap type="AppUser" id="AppUserResult">
        <result property="id"    column="id"    />
        <result property="studentNumber"    column="student_number"    />
        <result property="name"    column="name"    />
        <result property="password"    column="password"    />
        <result property="avatar"    column="avatar"    />
        <result property="height"    column="height"    />
        <result property="weight"    column="weight"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <resultMap id="AppUserAllergenResult" type="AppUser" extends="AppUserResult">
        <collection property="allergenList" ofType="Allergen" column="id" select="selectAllergenList" />
    </resultMap>

    <resultMap type="Allergen" id="AllergenResult">
        <result property="id"    column="id"    />
        <result property="studentId"    column="student_id"    />
        <result property="allergen"    column="allergen"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <sql id="selectAppUserVo">
        select id, student_number, name, password, avatar, height, weight, create_time, update_time from app_user
    </sql>

    <select id="selectAppUserList" parameterType="AppUser" resultMap="AppUserResult">
        <include refid="selectAppUserVo"/>
        <where>  
            <if test="studentNumber != null  and studentNumber != ''"> and student_number = #{studentNumber}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="avatar != null  and avatar != ''"> and avatar = #{avatar}</if>
            <if test="height != null "> and height = #{height}</if>
            <if test="weight != null "> and weight = #{weight}</if>
        </where>
    </select>
    
    <select id="selectAppUserById" parameterType="String" resultMap="AppUserAllergenResult">
        select id, student_number, name, password, avatar, height, weight, create_time, update_time
        from app_user
        where id = #{id}
    </select>

    <select id="selectAllergenList" resultMap="AllergenResult">
        select id, student_id, allergen, create_time
        from allergen
        where student_id = #{student_id}
    </select>

    <insert id="insertAppUser" parameterType="AppUser" useGeneratedKeys="true" keyProperty="id">
        insert into app_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentNumber != null and studentNumber != ''">student_number,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="password != null">password,</if>
            <if test="avatar != null and avatar != ''">avatar,</if>
            <if test="height != null">height,</if>
            <if test="weight != null">weight,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentNumber != null and studentNumber != ''">#{studentNumber},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="password != null">#{password},</if>
            <if test="avatar != null and avatar != ''">#{avatar},</if>
            <if test="height != null">#{height},</if>
            <if test="weight != null">#{weight},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateAppUser" parameterType="AppUser">
        update app_user
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentNumber != null and studentNumber != ''">student_number = #{studentNumber},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="password != null">password = #{password},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="height != null">height = #{height},</if>
            <if test="weight != null">weight = #{weight},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAppUserById" parameterType="String">
        delete from app_user where id = #{id}
    </delete>

    <delete id="deleteAppUserByIds" parameterType="String">
        delete from app_user where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteAllergenByStudentIds" parameterType="String">
        delete from allergen where student_id in 
        <foreach item="studentId" collection="array" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </delete>

    <delete id="deleteAllergenByStudentId" parameterType="String">
        delete from allergen where student_id = #{studentId}
    </delete>

    <insert id="batchAllergen">
        insert into allergen( id, student_id, allergen, create_time) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.studentId}, #{item.allergen}, #{item.createTime})
        </foreach>
    </insert>
</mapper>